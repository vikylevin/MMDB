<script setup>
import { ref, onMounted } from 'vue';
import axios from 'axios';
import MovieCard from '../components/MovieCard.vue';
import { Search } from '@element-plus/icons-vue';
import { ElSkeleton, ElSkeletonItem, ElCarousel, ElCarouselItem } from 'element-plus';

const popularMovies = ref([]);
const topRatedMovies = ref([]);
const upcomingMovies = ref([]);
const trendingMovies = ref([]);
const loading = ref(true);
const error = ref(null);
const searchQuery = ref('');

const fetchMovies = async () => {
  try {
    loading.value = true;
    error.value = null;

    const [popularRes, topRatedRes, upcomingRes, trendingRes] = await Promise.all([
      axios.get('http://127.0.0.1:5000/api/movies/popular'),
      axios.get('http://127.0.0.1:5000/api/movies/top-rated'),
      axios.get('http://127.0.0.1:5000/api/movies/upcoming'),
      axios.get('http://127.0.0.1:5000/api/movies/trending')
    ]);

    popularMovies.value = popularRes.data.results.slice(0, 8);
    topRatedMovies.value = topRatedRes.data.results.slice(0, 8);
    upcomingMovies.value = upcomingRes.data.results.slice(0, 8);
    trendingMovies.value = trendingRes.data.results.slice(0, 5);
  } catch (err) {
    console.error('Error fetching movies:', err);
    error.value = 'Failed to load movies. Please try again later.';
  } finally {
    loading.value = false;
  }
};

const searchMovies = () => {
  if (searchQuery.value.trim()) {
    // Navigate to search results page with query
    window.location.href = `/search?query=${encodeURIComponent(searchQuery.value)}`;
  }
};

onMounted(() => {
  fetchMovies();
});

const imageBaseUrl = 'https://image.tmdb.org/t/p/original';
</script>

<template>
  <div class="home-view">
    <!-- Search Bar -->
    <section class="search-section">
      <el-row :gutter="20" justify="center">
        <el-col :span="16">
          <el-input
            v-model="searchQuery"
            placeholder="Search for movies..."
            class="search-input"
            @keyup.enter="searchMovies"
          >
            <template #append>
              <el-button @click="searchMovies">
                <el-icon><Search /></el-icon>
              </el-button>
            </template>
          </el-input>
        </el-col>
      </el-row>
    </section>

    <!-- Hero Section with Carousel -->
    <section class="hero-section" v-if="!loading && !error">
      <el-carousel :interval="5000" height="500px" indicator-position="outside" arrow="always">
        <el-carousel-item v-for="movie in trendingMovies" :key="movie.id">
          <div class="carousel-item" :style="{
            backgroundImage: `linear-gradient(to bottom, rgba(0,0,0,0.2), rgba(0,0,0,0.8)), url(${imageBaseUrl}${movie.backdrop_path})`
          }">
            <div class="carousel-content">
              <h2>{{ movie.title }}</h2>
              <p>{{ movie.overview }}</p>
              <router-link :to="`/movie/${movie.id}`" class="hero-btn">
                View Details
              </router-link>
            </div>
          </div>
        </el-carousel-item>
      </el-carousel>
    </section>

    <!-- Loading Skeleton -->
    <div v-if="loading" class="loading-skeleton">
      <el-skeleton :rows="3" animated />
    </div>

    <!-- Error Message -->
    <div v-if="error" class="error-message">
      <el-alert :title="error" type="error" show-icon />
    </div>

    <!-- Movie Sections -->
    <template v-if="!loading && !error">
      <!-- Popular Movies Section -->
      <section class="movie-section">
        <div class="section-header">
          <h2>Popular Movies</h2>
          <router-link to="/movies/popular" class="view-all">View All</router-link>
        </div>
        <div class="movie-grid">
          <div v-for="movie in popularMovies" :key="movie.id" class="movie-item">
            <MovieCard :movie="movie" />
          </div>
        </div>
      </section>

      <!-- Top Rated Movies Section -->
      <section class="movie-section">
        <div class="section-header">
          <h2>Top Rated</h2>
          <router-link to="/movies/top-rated" class="view-all">View All</router-link>
        </div>
        <div class="movie-grid">
          <div v-for="movie in topRatedMovies" :key="movie.id" class="movie-item">
            <MovieCard :movie="movie" />
          </div>
        </div>
      </section>

      <!-- Upcoming Movies Section -->
      <section class="movie-section">
        <div class="section-header">
          <h2>Coming Soon</h2>
          <router-link to="/movies/upcoming" class="view-all">View All</router-link>
        </div>
        <div class="movie-grid">
          <div v-for="movie in upcomingMovies" :key="movie.id" class="movie-item">
            <MovieCard :movie="movie" />
          </div>
        </div>
      </section>
    </template>
  </div>
</template>

<style scoped>
.home-view {
  padding-bottom: 2rem;
}

.search-section {
  margin-bottom: 2rem;
}

.search-input {
  margin-bottom: 1rem;
}

.hero-section {
  margin-bottom: 2rem;
}

.carousel-item {
  height: 100%;
  background-size: cover;
  background-position: center;
  display: flex;
  align-items: flex-end;
}

.carousel-content {
  color: white;
  padding: 2rem;
  max-width: 600px;
}

.carousel-content h2 {
  font-size: 2.5rem;
  margin: 0 0 1rem;
}

.carousel-content p {
  font-size: 1.1rem;
  margin: 0 0 1.5rem;
  line-height: 1.5;
}

.hero-btn {
  background-color: var(--secondary-color);
  color: white;
  padding: 0.75rem 1.5rem;
  border-radius: 4px;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  transition: background-color 0.3s;
  display: inline-block;
}

.hero-btn:hover {
  background-color: #3ba676;
}

.section-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
}

.section-header h2 {
  font-size: 1.5rem;
  font-weight: 600;
  margin: 0;
  color: var(--text-color);
}

.view-all {
  font-weight: 500;
  transition: color 0.2s;
}

.movie-section {
  margin-bottom: 3rem;
}

.movie-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 1.5rem;
}

.loading-skeleton {
  padding: 2rem;
  background-color: var(--card-bg);
  border-radius: 8px;
  margin-bottom: 2rem;
}

.error-message {
  margin: 2rem 0;
}

@media (max-width: 768px) {
  .carousel-content h2 {
    font-size: 1.8rem;
  }

  .carousel-content p {
    font-size: 1rem;
  }

  .movie-grid {
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 1rem;
  }
}
</style>
